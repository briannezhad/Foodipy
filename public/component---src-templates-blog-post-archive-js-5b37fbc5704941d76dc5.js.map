{"version":3,"file":"component---src-templates-blog-post-archive-js-5b37fbc5704941d76dc5.js","mappings":"4OAqDA,MA3CY,KAAO,IAAD,EAChB,MAAM,OAAEA,IAAWC,EAAAA,EAAAA,gBAAe,aAc5BC,EAAYF,SAAc,QAAR,EAANA,EAAQG,cAAM,WAAR,EAAN,EAAgBC,IAElC,OACE,uBAAKC,UAAU,OACZH,GACC,uBACEI,KAAKN,aAAM,EAANA,EAAQO,YAAS,GACtBF,UAAU,aACVG,IAAKN,KAGRF,aAAM,EAANA,EAAQO,YACP,yBAAG,cACU,8BAASP,EAAOO,WAAmB,KAE7CP,aAAM,EAANA,EAAQS,cAAe,KAAI,KAE3BT,aAAM,EAANA,EAAQU,UACP,qBAAGC,KAAI,yBAAyBX,aAAM,EAANA,EAAQU,UAAO,KAAU,sCAM3D,E,oBCuEV,MA/GkB,IAGX,IAHY,KACjBE,EACAC,aAAa,aAAEC,EAAY,iBAAEC,IAC9B,EACC,MAAMC,EAAQJ,EAAKK,UAAUC,MAE7B,OAAKF,EAAMG,OAcT,gBAAC,IAAM,CAACC,YAAU,GAChB,gBAAC,IAAG,CAACC,MAAM,cACT,wBAAMC,MAAM,QACZ,2BAASA,MAAM,SACf,uBAAKjB,UAAU,mBACf,uBAAKA,UAAU,OACdW,EAAMO,KAAIC,IAAS,IAAD,YACjB,MAAMH,EAAQG,EAAKH,MACbI,EAAgB,CACpBb,KAAwB,QAApB,EAAEY,EAAKC,qBAAa,OAAM,QAAN,EAAlB,EAAoBC,YAAI,OAAW,QAAX,EAAxB,EAA0BC,iBAAS,OAAiB,QAAjB,EAAnC,EAAqCC,uBAAe,WAAlC,EAAlB,EAAsDC,gBAC5DvB,KAAuB,QAAlB,EAAAkB,EAAKC,qBAAa,OAAM,QAAN,EAAlB,EAAoBC,YAAI,WAAN,EAAlB,EAA0BpB,MAAG,IAEpC,OACE,2BACAwB,WAAS,EACTC,SAAS,4BACTT,MAAM,0CAA0CU,IAAKR,EAAKS,KAEpD,uBAAKX,MAAM,cACP,uBAAKA,MAAM,mBACX,gBAAC,EAAAY,KAAI,CAACC,GAAIX,EAAKS,IAAKG,SAAS,QAEtBX,aAAa,EAAbA,EAAeb,OACd,gBAAC,EAAAyB,EAAW,CACVC,MAAOb,EAAcb,KACrBN,IAAKmB,EAAcnB,IACnBiC,MAAO,CAAEC,aAAc,IACvBnC,UAAU,mBAKpB,uBAAKiB,MAAM,qBACP,uBAAKA,MAAM,aACP,qBAAGX,KAAK,iBAAiBW,MAAM,aAAY,UAG3C,sBAAIA,MAAM,eACV,gBAAC,EAAAY,KAAI,CAACC,GAAIX,EAAKS,IAAKG,SAAS,OAC3B,wBAAMA,SAAS,aAAYK,EAAAA,EAAAA,IAAMpB,MAIvC,uBAAKC,MAAM,eACP,yBAAG,2BAASc,SAAS,gBAAeK,EAAAA,EAAAA,IAAMjB,EAAKkB,YAGnD,sBAAIpB,MAAM,0BAGN,sBAAIA,MAAM,aAAY,IAAC,wBAAMA,MAAM,QAAa,KAAGE,EAAKmB,SAqBhE,QASf5B,GACC,gCACE,gBAAC,EAAAmB,KAAI,CAACC,GAAIpB,GAAkB,iBAC5B,4BAGHD,GAAgB,gBAAC,EAAAoB,KAAI,CAACC,GAAIrB,GAAc,cAlGzC,gBAAC,IAAM,CAACM,YAAU,GAChB,gBAAC,IAAG,CAACC,MAAM,cACX,gBAAC,EAAG,MACJ,yBAAG,kFAgGE,C","sources":["webpack://gatsby-starter-wordpress-blog/./src/components/bio.js","webpack://gatsby-starter-wordpress-blog/./src/templates/blog-post-archive.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const { author } = useStaticQuery(graphql`\n    query BioQuery {\n      # if there was more than one user, this would need to be filtered\n      author: wpUser {\n        firstName\n        twitter: name\n        description\n        avatar {\n          url\n        }\n      }\n    }\n  `)\n\n  const avatarUrl = author?.avatar?.url\n\n  return (\n    <div className=\"bio\">\n      {avatarUrl && (\n        <img\n          alt={author?.firstName || ``}\n          className=\"bio-avatar\"\n          src={avatarUrl}\n        />\n      )}\n      {author?.firstName && (\n        <p>\n          Written by <strong>{author.firstName}</strong>\n          {` `}\n          {author?.description || null}\n          {` `}\n          {author?.twitter && (\n            <a href={`https://twitter.com/${author?.twitter || ``}`}>\n              You should follow them on Twitter\n            </a>\n          )}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport parse from \"html-react-parser\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({\n  data,\n  pageContext: { nextPagePath, previousPagePath },\n}) => {\n  const posts = data.allWpPost.nodes\n\n  if (!posts.length) {\n    return (\n      <Layout isHomePage>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add posts to your WordPress site and they'll\n          appear here!\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout isHomePage>\n      <Seo title=\"All posts\" />\n        <main class=\"main\">\n        <section class=\"mt-90\">\n        <div className=\"container-fluid\">\n        <div className=\"row\">\n        {posts.map(post => {\n          const title = post.title\n          const featuredImage = {\n            data: post.featuredImage?.node?.localFile?.childImageSharp?.gatsbyImageData,\n            alt: post.featuredImage?.node?.alt || ``,\n          }\n          return (\n            <article \n            itemScope\n            itemType=\"http://schema.org/Article\"\n            class=\"col-xl-4 col-lg-6 col-md-6 masonry-item\" key={post.uri}\n            >\n                  <div class=\"post-card \">\n                      <div class=\"post-card-image\">\n                      <Link to={post.uri} itemProp=\"url\">\n                            {/* if we have a featured image for this post let's display it */}\n                            {featuredImage?.data && (\n                              <GatsbyImage\n                                image={featuredImage.data}\n                                alt={featuredImage.alt}\n                                style={{ marginBottom: 10 }}\n                                className=\"card-img-top\"\n                              />\n                            )}\n                        </Link>\n                      </div>\n                      <div class=\"post-card-content\">\n                          <div class=\"entry-cat\">\n                              <a href=\"blog-grid.html\" class=\"categorie\"> food</a>\n                              </div>\n\n                              <h5 class=\"entry-title\">\n                              <Link to={post.uri} itemProp=\"url\">\n                                <span itemProp=\"headline\">{parse(title)}</span>\n                              </Link>\n                              </h5>\n\n                          <div class=\"post-exerpt\">\n                              <p><section itemProp=\"description\">{parse(post.excerpt)}</section></p>\n                          </div>\n\n                          <ul class=\"entry-meta list-inline\">\n                              {/* <li class=\"post-author-img\"><a href=\"author.html\"> </a></li>\n                              <li class=\"post-author\"><a href=\"author.html\">David Smith</a> </li> */}\n                              <li class=\"post-date\"> <span class=\"dot\"></span>  {post.date}</li>\n                          </ul>\n                      </div>\n                  </div>\n\n           \n\n                   {/* <!--pagination--> */}\n                   {/* <div class=\"row\">\n                       <div class=\"col-lg-12\">\n                           <div class=\"pagination \">\n                               <ul class=\"list-inline\">\n                                   <li class=\"active\"> <a href=\"#\">1</a></li>\n                                   <li><a href=\"#\">2</a></li>\n                                   <li><a href=\"#\">3</a></li>\n                                   <li><a href=\"#\">4</a></li>\n                                   <li><a href=\"#\"><i class=\"fas fa-arrow-right\"></i></a></li>\n                               </ul>\n                           </div>   \n                       </div>\n                   </div> */}\n            </article>\n           \n        )\n        })}\n      </div>\n      </div>\n      </section>\n      </main>\n\n      {previousPagePath && (\n        <>\n          <Link to={previousPagePath}>Previous page</Link>\n          <br />\n        </>\n      )}\n      {nextPagePath && <Link to={nextPagePath}>Next page</Link>}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        excerpt\n        uri\n        featuredImage {\n          node {\n            altText\n            localFile {\n              childImageSharp {\n                gatsbyImageData(\n                  quality: 100\n                  placeholder: TRACED_SVG\n                  layout: FULL_WIDTH\n                )\n              }\n            }\n          }\n        }\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        excerpt\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","avatarUrl","avatar","url","className","alt","firstName","src","description","twitter","href","data","pageContext","nextPagePath","previousPagePath","posts","allWpPost","nodes","length","isHomePage","title","class","map","post","featuredImage","node","localFile","childImageSharp","gatsbyImageData","itemScope","itemType","key","uri","Link","to","itemProp","G","image","style","marginBottom","parse","excerpt","date"],"sourceRoot":""}