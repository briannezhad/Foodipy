{"version":3,"file":"component---src-templates-blog-post-archive-js-d224ca7bb6e3b911232a.js","mappings":"2KAqDA,IA3CY,KAAO,IAAD,EAChB,MAAM,OAAEA,IAAWC,EAAAA,EAAAA,gBAAe,aAc5BC,EAAYF,SAAc,QAAR,EAANA,EAAQG,cAAM,WAAR,EAAN,EAAgBC,IAElC,OACE,uBAAKC,UAAU,OACZH,GACC,uBACEI,KAAKN,aAAM,EAANA,EAAQO,YAAS,GACtBF,UAAU,aACVG,IAAKN,KAGRF,aAAM,EAANA,EAAQO,YACP,yBAAG,cACU,8BAASP,EAAOO,WAAmB,KAE7CP,aAAM,EAANA,EAAQS,cAAe,KAAI,KAE3BT,aAAM,EAANA,EAAQU,UACP,qBAAGC,KAAI,yBAAyBX,aAAM,EAANA,EAAQU,UAAO,KAAU,sCAM3D,C,wGCsCV,UA9EkB,IAGX,IAHY,KACjBE,EACAC,aAAa,aAAEC,EAAY,iBAAEC,IAC9B,EACC,MAAMC,EAAQJ,EAAKK,UAAUC,MAE7B,OAAKF,EAAMG,OAcT,gBAAC,IAAM,CAACC,YAAU,GAChB,gBAAC,IAAG,CAACC,MAAM,cACT,uBAAKhB,UAAU,YACdW,EAAMM,KAAIC,IAAS,IAAD,YACjB,MAAMF,EAAQE,EAAKF,MACbG,EAAgB,CACpBZ,KAAwB,QAApB,EAAEW,EAAKC,qBAAa,OAAM,QAAN,EAAlB,EAAoBC,YAAI,OAAW,QAAX,EAAxB,EAA0BC,iBAAS,OAAiB,QAAjB,EAAnC,EAAqCC,uBAAe,WAAlC,EAAlB,EAAsDC,gBAC5DtB,KAAuB,QAAlB,EAAAiB,EAAKC,qBAAa,OAAM,QAAN,EAAlB,EAAoBC,YAAI,WAAN,EAAlB,EAA0BnB,MAAG,IAEpC,OACI,uBAAKD,UAAU,YACb,2BACEwB,WAAS,EACTC,SAAS,6BAET,uBAAKzB,UAAU,gBAAgB0B,IAAKR,EAAKS,MAExCR,aAAa,EAAbA,EAAeZ,OACd,gBAAC,EAAAqB,EAAW,CACVC,MAAOV,EAAcZ,KACrBN,IAAKkB,EAAclB,IACnB6B,MAAO,CAAEC,aAAc,IACvB/B,UAAU,iBAGd,uBAAKA,UAAU,aACb,sBAAIA,UAAU,cACZ,gBAAC,EAAAgC,KAAI,CAACC,GAAIf,EAAKS,IAAKO,SAAS,OAC3B,wBAAMA,SAAS,aAAYC,EAAAA,EAAAA,IAAMnB,MAGrC,qBAAGhB,UAAU,gCACX,2BAASkC,SAAS,gBAAeC,EAAAA,EAAAA,IAAMjB,EAAKkB,UAC5C,6BAAQlB,EAAKmB,OAEf,gBAAC,EAAAL,KAAI,CAAChC,UAAU,gCAAgCiC,GAAIf,EAAKS,IAAKO,SAAS,OAAM,uBAM7E,KAMbxB,GACC,gCACE,gBAAC,EAAAsB,KAAI,CAACC,GAAIvB,GAAkB,iBAC5B,4BAGHD,GAAgB,gBAAC,EAAAuB,KAAI,CAACC,GAAIxB,GAAc,cAjEzC,gBAAC,IAAM,CAACM,YAAU,GAChB,gBAAC,IAAG,CAACC,MAAM,cACX,gBAAC,IAAG,MACJ,yBAAG,kFA+DE,C","sources":["webpack://gatsby-starter-wordpress-blog/./src/components/bio.js","webpack://gatsby-starter-wordpress-blog/./src/templates/blog-post-archive.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const { author } = useStaticQuery(graphql`\n    query BioQuery {\n      # if there was more than one user, this would need to be filtered\n      author: wpUser {\n        firstName\n        twitter: name\n        description\n        avatar {\n          url\n        }\n      }\n    }\n  `)\n\n  const avatarUrl = author?.avatar?.url\n\n  return (\n    <div className=\"bio\">\n      {avatarUrl && (\n        <img\n          alt={author?.firstName || ``}\n          className=\"bio-avatar\"\n          src={avatarUrl}\n        />\n      )}\n      {author?.firstName && (\n        <p>\n          Written by <strong>{author.firstName}</strong>\n          {` `}\n          {author?.description || null}\n          {` `}\n          {author?.twitter && (\n            <a href={`https://twitter.com/${author?.twitter || ``}`}>\n              You should follow them on Twitter\n            </a>\n          )}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport parse from \"html-react-parser\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({\n  data,\n  pageContext: { nextPagePath, previousPagePath },\n}) => {\n  const posts = data.allWpPost.nodes\n\n  if (!posts.length) {\n    return (\n      <Layout isHomePage>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add posts to your WordPress site and they'll\n          appear here!\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout isHomePage>\n      <Seo title=\"All posts\" />\n        <div className=\"row py-3\">\n        {posts.map(post => {\n          const title = post.title\n          const featuredImage = {\n            data: post.featuredImage?.node?.localFile?.childImageSharp?.gatsbyImageData,\n            alt: post.featuredImage?.node?.alt || ``,\n          }\n          return (\n              <div className=\"col-md-4\">\n                <article \n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                  >\n                  <div className=\"card border-0\" key={post.uri}>\n                  {/* if we have a featured image for this post let's display it */}\n                  {featuredImage?.data && (\n                    <GatsbyImage\n                      image={featuredImage.data}\n                      alt={featuredImage.alt}\n                      style={{ marginBottom: 50 }}\n                      className=\"card-img-top\"\n                    />\n                  )}\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      <Link to={post.uri} itemProp=\"url\">\n                        <span itemProp=\"headline\">{parse(title)}</span>\n                      </Link>\n                    </h5>\n                    <p className=\"card-text border-bottom pb-2\">\n                      <section itemProp=\"description\">{parse(post.excerpt)}</section>\n                      <small>{post.date}</small>\n                    </p>\n                    <Link className=\"btn btn-primary black-button \" to={post.uri} itemProp=\"url\">\n                      Go to The Recipe\n                    </Link>\n                  </div>\n                </div>\n                </article>\n              </div>\n           \n          )\n        })}\n       </div>\n\n      {previousPagePath && (\n        <>\n          <Link to={previousPagePath}>Previous page</Link>\n          <br />\n        </>\n      )}\n      {nextPagePath && <Link to={nextPagePath}>Next page</Link>}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        excerpt\n        uri\n        featuredImage {\n          node {\n            altText\n            localFile {\n              childImageSharp {\n                gatsbyImageData(\n                  quality: 100\n                  placeholder: TRACED_SVG\n                  layout: FULL_WIDTH\n                )\n              }\n            }\n          }\n        }\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        excerpt\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","avatarUrl","avatar","url","className","alt","firstName","src","description","twitter","href","data","pageContext","nextPagePath","previousPagePath","posts","allWpPost","nodes","length","isHomePage","title","map","post","featuredImage","node","localFile","childImageSharp","gatsbyImageData","itemScope","itemType","key","uri","G","image","style","marginBottom","Link","to","itemProp","parse","excerpt","date"],"sourceRoot":""}